There arenitems eachbelonging to zero or one ofmgroups where group[i]is the group that the i-th item belongs to and it's equal to -1if the i-th item belongs to no group. The items and the groups are zero indexed. A group can have no item belonging to it.
Return a sorted list of the items such that:
	The items that belong to the same group are next to each other in the sorted list.
	There are somerelationsbetween these items wherebeforeItems[i]is a list containing all the items that should come before thei-th item in the sorted array (to the left of thei-th item).
Return any solution if there is more than one solution and return an empty listif there is no solution.
Constraints:
	1 <= m <= n <= 3 * 104
	group.length == beforeItems.length == n
	-1 <= group[i] <= m - 1
	0 <= beforeItems[i].length <= n - 1
	0 <= beforeItems[i][j] <= n - 1
	i != beforeItems[i][j]
	beforeItems[i]does not containduplicates elements.