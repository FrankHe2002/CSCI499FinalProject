You are given a list ofpreferencesfornfriends, where n is always even.
For each person i,preferences[i]containsa list of friendssorted in the order of preference. In other words, a friend earlier in the list is more preferred than a friend later in the list.Friends ineach list aredenoted by integers from 0 to n-1.
All the friends are divided into pairs.The pairings aregiven in a listpairs,where pairs[i] = [xi, yi] denotes xiis paired with yi and yi is paired with xi.
However, this pairing may cause some of the friends to be unhappy.A friend xis unhappy if xis paired with yand there exists a friend uwhois paired with vbut:
	xprefers uover y,and
	uprefers xover v.
Return the number of unhappy friends.
Constraints:
	2 <= n <= 500
	nis even.
	preferences.length== n
	preferences[i].length== n - 1
	0 <= preferences[i][j] <= n - 1
	preferences[i]does not contain i.
	All values inpreferences[i]are unique.
	pairs.length== n/2
	pairs[i].length== 2
	xi != yi
	0 <= xi, yi<= n - 1
	Each person is contained in exactly one pair.